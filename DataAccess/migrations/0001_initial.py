# Generated by Django 4.1 on 2023-09-25 22:12

import DataAccess.validators
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="factura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipoPago",
                    models.CharField(
                        choices=[
                            (None, "Seleccione"),
                            ("Tarjeta", "TARJETA"),
                            ("Efectivo", "EFECTIVO"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "propina",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "total",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.0)]
                    ),
                ),
                ("email", models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="producto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=200, unique=True)),
                (
                    "precio",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.0)]
                    ),
                ),
                (
                    "unidadMedida",
                    models.CharField(
                        choices=[
                            (None, "Seleccione"),
                            ("Litros", "LITROS"),
                            ("Libras", "LIBRAS"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            (None, "Seleccione"),
                            ("Disponible", "DISPONIBLE"),
                            ("Agotado", "AGOTADO"),
                        ],
                        default="Disponible",
                        max_length=200,
                    ),
                ),
                (
                    "cantidadDisponible",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.0)]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="restaurante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=200, unique=True)),
                ("descripcion", models.TextField(default="", max_length=1000)),
                (
                    "telefono",
                    models.CharField(
                        max_length=200, validators=[DataAccess.validators.numeroValido]
                    ),
                ),
                ("logo", models.TextField(default="X")),
                ("cantidadMesas", models.PositiveIntegerField(default=4)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            (None, "Seleccione"),
                            ("Bebida", "BEBIDA"),
                            ("Principal", "PRINCIPAL"),
                            ("Postre", "POSTRE"),
                            ("Due√±o", "CAJA"),
                        ],
                        max_length=200,
                    ),
                ),
                ("isAdminRest", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
        migrations.CreateModel(
            name="proveedor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=200, unique=True)),
                (
                    "telefono",
                    models.CharField(
                        max_length=200, validators=[DataAccess.validators.numeroValido]
                    ),
                ),
                ("email", models.EmailField(max_length=100)),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="productosFactura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidad",
                    models.FloatField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                (
                    "factura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.factura",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.producto",
                    ),
                ),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="producto",
            name="restaurante",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="DataAccess.restaurante",
            ),
        ),
        migrations.CreateModel(
            name="plato",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=200, unique=True)),
                (
                    "estacion",
                    models.CharField(
                        choices=[
                            (None, "Seleccione"),
                            ("Bebida", "BEBIDA"),
                            ("Principal", "PRINCIPAL"),
                            ("Postre", "POSTRE"),
                        ],
                        max_length=200,
                    ),
                ),
                ("especial", models.BooleanField(default=True)),
                ("descripcion", models.TextField(max_length=500)),
                (
                    "precio",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                    ),
                ),
                ("imagenMenu", models.TextField(default="X")),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="orden",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("identificator", models.TextField(default="X")),
                ("mesa", models.PositiveIntegerField()),
                ("cantidad", models.IntegerField(default=1)),
                ("estado", models.BooleanField(default=True)),
                ("horaPedido", models.DateTimeField()),
                (
                    "plato",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.plato",
                    ),
                ),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="inventario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cantidadGastada",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.0)]
                    ),
                ),
                (
                    "plato",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.plato",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.producto",
                    ),
                ),
                (
                    "restaurante",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="DataAccess.restaurante",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="factura",
            name="restaurante",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="DataAccess.restaurante",
            ),
        ),
    ]
